/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/backlight.h>


#define DEFAULT   0
#define LOWER     1
#define RAISE     2
#define KB_CONFIG 3

#define KEYS_L 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 30   // left hand
#define KEYS_R 6 7 8 9 10 11 18 19 20 21 22 23 31 32 33 34 35 36 37 // right hand
#define KEYS_T 38 39 40 41 42 43 44 45 46 47                        // thumbs

/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <KB_CONFIG>;
        };
    };


    behaviors {
        hml: homerow_mods_left {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS_LEFT";
          #binding-cells = <2>;
          bindings = <&kp>, <&kp>;
          flavor = "balanced";
          tapping-term-ms = <230>;
          quick-tap-ms = <175>;        // repeat on tap-into-hold
          //hold-trigger-key-positions = <KEYS_R KEYS_T>;
        };

        hmr: homerow_mods_right {
          compatible = "zmk,behavior-hold-tap";
          label = "HOMEROW_MODS_RIGHT";
          #binding-cells = <2>;
          bindings = <&kp>, <&kp>;
          flavor = "balanced";
          tapping-term-ms = <230>;
          quick_tap_ms = <175>;
          //hold-trigger-key-positions = <KEYS_L KEYS_T>;
        };

        // Left brackets and parentheses
        lbr: left_brackets {
            compatible = "zmk,behavior-tap-dance";
            label = "LEFT_BRACKETS";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp LBKT>, <&kp LBRC>;
        };
        // Right brackets and parentheses
        rbr: right_brackets {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_BRACKETS";
            #binding-cells = <0>;
            tapping-term-ms = <300>;
            bindings = <&kp RBKT>, <&kp LBRC>;
        };
        // Backspace with Del
        backdel: backspace_del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT)>;
        };
        // Mod-Tap but with the tap preferred, usefull for clipboard operations for example
        tmt: tap_prefered_mt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        // // Toggle Numbers layer
        // td1: tap_dance_1 {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_1";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <300>;
        //     bindings = <&mo RAISE>, <&tog MATHS>, <&tog RAISE>;
        // };
        // // Toggle capsword left
        // td2: tap_dance_2 {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_2";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp LSHFT>, <&caps_word>;
        // };
        // // Toggle capsword right
        // td3: tap_dance_3 {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_3";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp RSHFT>, <&caps_word>;
        // };
        // // Toggle Windows layer
        // td4: tap_dance_4 {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_4";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp LGUI>, <&tog WINDOWS>;
        // };
        // // Toggle Windows layer
        // td5: tap_dance_5 {
        //     compatible = "zmk,behavior-tap-dance";
        //     label = "TAP_DANCE_5";
        //     #binding-cells = <0>;
        //     tapping-term-ms = <200>;
        //     bindings = <&kp RGUI>, <&tog WINDOWS>;
        // };
        // // Backspace a whole word when holding backspace
        // backspace_word: backspace_word {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "BACKSPACE_WORD";
        //     #binding-cells = <2>;
        //     tapping_term_ms = <135>;
        //     quick_tap_ms = <0>;
        //     flavor = "tap-preferred";
        //     bindings = <&bsp_word>, <&kp>;
        // };
        // w_backspace_word: w_backspace_word {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "WINDOWS_BACKSPACE_WORD";
        //     #binding-cells = <2>;
        //     tapping_term_ms = <135>;
        //     quick_tap_ms = <0>;
        //     flavor = "tap-preferred";
        //     bindings = <&w_bsp_word>, <&kp>;
        // };
    };


    macros {
        // unindent: unindent {
        //     label = "UNINDENT";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LSHIFT>
        //         , <&macro_tap &kp TAB>
        //         , <&macro_release &kp LSHIFT>
        //         ;
        // };
        // lstart: lstart {
        //     label = "Line_Start";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_tap &kp LEFT>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // lend: lend {
        //     label = "Line_End";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_tap &kp RIGHT>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // scrsh: scrsh {
        //     label = "Screenshot";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_press &kp LSHIFT>
        //         , <&macro_tap &kp N3>
        //         , <&macro_release &kp LSHFT>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // scrcr: scrcr {
        //     label = "Screen_Crop";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_press &kp LSHIFT>
        //         , <&macro_tap &kp N4>
        //         , <&macro_release &kp LSHFT>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // wscrcr: wscrcr {
        //     label = "Windows_Screen_Crop";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_press &kp LSHIFT>
        //         , <&macro_tap &kp S>
        //         , <&macro_release &kp LSHFT>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // pal: pal {
        //     label = "Pallette";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_press &kp LCTRL>
        //         , <&macro_tap &kp SPACE>
        //         , <&macro_release &kp LCTRL>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // wpal: wpal {
        //     label = "W_Pallette";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_tap &kp DOT>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // // Word backspace macros
        // bsp_word: bsp_word {
        //     label = "BSP_WORD";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LALT>
        //         , <&macro_tap &kp BSPC>
        //         , <&macro_release &kp LALT>
        //         ;
        // };
        // w_bsp_word: w_bsp_word {
        //     label = "W_BSP_WORD";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LCTRL>
        //         , <&macro_tap &kp BSPC>
        //         , <&macro_release &kp LCTRL>
        //         ;
        // };
        // // Zoom macros
        // zoom_in: zoom_in {
        //     label = "ZOOM_IN";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_tap &kp EQUAL>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // zoom_out: zoom_out {
        //     label = "ZOOM_OUT";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_tap &kp MINUS>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // reset_zoom: reset_zoom {
        //     label = "RESET_ZOOM";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LGUI>
        //         , <&macro_tap &kp N0>
        //         , <&macro_release &kp LGUI>
        //         ;
        // };
        // w_zoom_in: w_zoom_in {
        //     label = "WINDOWS_ZOOM_IN";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LCTRL>
        //         , <&macro_tap &kp EQUAL>
        //         , <&macro_release &kp LCTRL>
        //         ;
        // };
        // w_zoom_out: w_zoom_out {
        //     label = "WINDOWS_ZOOM_OUT";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LCTRL>
        //         , <&macro_tap &kp MINUS>
        //         , <&macro_release &kp LCTRL>
        //         ;
        // };
        // w_reset_zoom: w_reset_zoom {
        //     label = "WINDOWS_RESET_ZOOM";
        //     compatible = "zmk,behavior-macro";
        //     #binding-cells = <0>;
        //     bindings
        //         = <&macro_press &kp LCTRL>
        //         , <&macro_tap &kp N0>
        //         , <&macro_release &kp LCTRL>
        //         ;
        // };
    };


    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
//--------------------------------------------------------------------------------+                  +--------------------------------------------------------------------------------------------//
  &mt TILDE GRAVE   &kp Q         &kp W         &kp F         &kp P         &kp B                                      &kp J         &kp L          &kp U            &kp Y         &mt COLON SEMI   &mt UNDER MINUS
  &kp ESC           &hml LGUI A   &hml LALT R   &hml LCTRL S  &hml LSHFT T  &kp G                                      &kp M         &hmr LSHFT N   &hmr LCTRL E     &hmr LALT I   &hmr RGUI O      &mt DQT SQT
  &caps_word        &kp Z         &kp X         &tmt RC(C) C  &kp D         &tmt LS(INS) V &kp LG(LS(N4))   &kp F17    &kp K         &kp H          &mt LT COMMA     &mt GT DOT    &mt QMARK SLASH  &mt PLUS EQUAL
                                  &lbr          &none         &backdel      &kp SPACE      &mo LOWER        &mo RAISE  &kp ENTER     &kp TAB        &mt BSLH PIPE    &rbr
//                               +----------|-----------|----------|--------------------+             +-----------|-------|--------|-----------|---------+                      //
            >;
        };

        lower_layer {
            label = "Lower";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
//-------------------------------------------------------------------------------+                           +-------------------------------------------------------------------//
  &trans    &trans      &trans       &trans          &trans             &trans                                    &kp DOWN    &kp RIGHT      &kp END     &trans    &trans      &trans
  &trans    &kp EXCL    &hml LALT AT &hml LCTRL HASH &hml LSHFT DOLLAR  &kp PERCENT                               &kp CARET   &hmr LSHFT AMPERSAND  &hmr LCTRL STAR    &hmr LALT LPAR  &kp RPAR    &trans
  &trans    &trans      &trans       &trans          &trans             &trans        &trans            &trans    &kp UP      &kp LEFT       &kp HOME    &trans    &trans      &trans
                        &trans       &trans          &trans             &trans        &trans            &trans    &trans      &trans         &trans      &trans
//                       +------------|--------------|------------|--------------|-------------+    +--------|----------|----------|-----------|---------+                       //
            >;

        };

        raise_layer {
            label = "Raise";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
//-------------------------------------------------------------------------------+                      +----------------------------------------------------------------------------//
  &trans    &trans     &trans       &trans       &trans     &trans                                          &trans   &trans   &trans   &trans     &trans      &trans
  &trans    &kp N1     &kp N2       &kp N3       &kp N4     &kp N5                                          &kp N6   &kp N7   &kp N8   &kp N9     &kp N0      &trans
  &trans    &trans     &trans       &trans       &trans     &trans   &trans                        &trans   &trans   &trans   &trans   &trans     &trans      &trans
                       &trans       &trans       &trans     &trans   &trans                        &trans   &trans   &trans   &trans   &trans
//                     +----------------|-----------------|----------|-----------|--------+    +--------|----------|----------------|----------|----------+                          //
            >;
        };

        settings_layer {
            label = "Settings";
            sensor-bindings = <&inc_dec_kp UP DOWN &inc_dec_kp LEFT RIGHT>;
            bindings = <
//---------------------------------------------------------------------------------------+                        +------------------------------------------------------------------//
  &out OUT_TOG   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3    &bt BT_SEL 4                           &bt BT_CLR     &trans     &trans     &trans     &trans     &trans
  &kp F1         &kp F2         &kp F3         &kp F4         &kp F5          &kp F6                                 &kp F7     &kp F8     &kp F9     &kp F10     &kp F11     &kp F12
  &trans         &trans         &trans         &trans         &trans          &trans       &trans         &trans     &trans     &trans     &trans     &trans     &trans     &trans
                               &trans          &trans         &trans          &trans       &trans         &trans     &trans     &trans     &trans     &trans
//                         +--------------|--------------|--------------|----------------|--------+     +----------|---------|----------|----------|----------+                      //
            >;
        };

    };
};
